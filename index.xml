<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>验证菜鸟's Blogs</title><link>https://cslgbk.github.io/</link><description>Recent content on 验证菜鸟's Blogs</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 12 Apr 2021 10:33:21 +0800</lastBuildDate><atom:link href="https://cslgbk.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>使用正态分布随机Item</title><link>https://cslgbk.github.io/posts/%E4%BD%BF%E7%94%A8%E6%AD%A3%E6%80%81%E5%88%86%E5%B8%83%E9%9A%8F%E6%9C%BAitem/</link><pubDate>Mon, 12 Apr 2021 10:33:21 +0800</pubDate><guid>https://cslgbk.github.io/posts/%E4%BD%BF%E7%94%A8%E6%AD%A3%E6%80%81%E5%88%86%E5%B8%83%E9%9A%8F%E6%9C%BAitem/</guid><description>this is a test for markdown
1.总体思路 第一种是在利用SV中的权重分布模拟正态函数分布，第二种是利用DPI接口实现正态函数。考虑到实现难易程度，选择后者。总体框架如图1.1所示。2.在C中实现正态分布 实现正态分布函数有两种方法，一种是采用泰勒展开式，计算出最终值，一种是通过中心-极限定理得出正态分布。正态函数的泰勒展开式 -_-|| &amp;hellip; 一般采用中心-极限定理比较方便。 中心-极限定理的大致解释，每次从这些总体中随机抽取 n 个抽样，一共抽 m 次。 然后把这 m 组抽样分别求出平均值。 这些平均值的分布接近正态分布。#include&amp;lt;svdpi.h&amp;gt; // #include&amp;lt;stdlib.h&amp;gt; unsigned int get_normal() { unsigned int dat=0; unsigned char i; unsigned int seed; seed = rand(); srand(seed); for (i=0;i&amp;lt;10;i++) { dat += rand()%99; } return dat/i; }</description></item><item><title>My First Post</title><link>https://cslgbk.github.io/posts/my-first-post/</link><pubDate>Sun, 11 Apr 2021 20:13:54 +0800</pubDate><guid>https://cslgbk.github.io/posts/my-first-post/</guid><description>hello</description></item></channel></rss>